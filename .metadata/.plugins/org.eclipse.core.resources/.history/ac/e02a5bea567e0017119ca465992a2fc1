package com.udemyConcurreny;

import java.util.Collection;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

/*
 * Simulate download data from the web and create a singleton pattern using enums
 */


enum downloader
	{
		 INSTANCE;
		 private Semaphore semaphore = new Semaphore(3, true);
		 
		 public void downloadData()
		 { 
			 try {
				semaphore.acquire();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			 finally{
				 semaphore.release();}
		 }
		 
		 private void download()
		 {
			 System.out.println("Download data from web...");
			 try {
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		 }
	}
public class SemaphoreLearn {

	public static void main(String[] args) {
		ExecutorService executorService = Executors.newCachedThreadPool();
			
			@Override
			public void execute(Runnable arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public <T> Future<T> submit(Runnable arg0, T arg1) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public Future<?> submit(Runnable arg0) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public <T> Future<T> submit(Callable<T> arg0) {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public List<Runnable> shutdownNow() {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public void shutdown() {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public boolean isTerminated() {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public boolean isShutdown() {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public <T> T invokeAny(Collection<? extends Callable<T>> arg0, long arg1,
					TimeUnit arg3) throws InterruptedException, ExecutionException,
					TimeoutException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public <T> T invokeAny(Collection<? extends Callable<T>> arg0)
					throws InterruptedException, ExecutionException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public <T> List<Future<T>> invokeAll(
					Collection<? extends Callable<T>> arg0, long arg1, TimeUnit arg3)
					throws InterruptedException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public <T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> arg0)
					throws InterruptedException {
				// TODO Auto-generated method stub
				return null;
			}
			
			@Override
			public boolean awaitTermination(long arg0, TimeUnit arg2)
					throws InterruptedException {
				// TODO Auto-generated method stub
				return false;
			}
		};

	}

}
