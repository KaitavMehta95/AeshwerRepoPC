 package com.udemyCollectionConcurrency;

import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

 
class ProducerConsumer implements Runnable{

	private BlockingQueue<Integer> blockingQueue ;
	
	public  ProducerConsumer(BlockingQueue<Integer> blockingQueue) {
		this.blockingQueue =  blockingQueue;
	}
	@Override
	public void run() {
		
		int counter = 0;
		while(true){
			try {
				blockingQueue.put(counter);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			counter++;
			Thread.sleep(1000);
		}
		
	}
	
	
} 
 
public class BlockQueueLearn {

	public static void main(String[] args) {
		
		ExecutorService executerService = Executors.newFixedThreadPool(5);
	}
}
