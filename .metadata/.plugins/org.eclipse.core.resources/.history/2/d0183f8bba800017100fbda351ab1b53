package com.udemy.paralleAlgo;

import java.util.Random;

public class App {
	
	public static Random random = new Random();

	public static void main(String[] args) {
		
		int numOfThreads  = Runtime.getRuntime().availableProcessors();

		System.out.println("Number of threads/cores: " + numOfThreads);
		System.out.println("");

		int[] numbers = createRandomArray();
		MergeSort mergeSort = new MergeSort(numbers);
		
		// run the algorithm and time how long it takes
		long startTime1 = System.currentTimeMillis();
		mergeSort.parallelMergeSort(0, numbers.length-1, numOfThreads);
		mergeSort.showResult();
		long endTime1 = System.currentTimeMillis();

	/*	
		//O(NLogN)
		MergeSort mergeSort = new MergeSort(num);
		mergeSort.mergerSort(0, num.length-1);
		mergeSort.showResult();
	*/	
		ParalleMergeSort parallelMergeSort = new ParalleMergeSort(num);
		parallelMergeSort.mergerSort(0, num.length-1);
		parallelMergeSort.showResult();
		
	}
	
	public static int[] createRandomArray() {
		int[] a = new int[10];
		for (int i = 0; i < 10; i++) {
			a[i] = random.nextInt(10000);			
		}
		return a;
	}
}
