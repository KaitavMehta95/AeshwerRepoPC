package BinaryTrees;

import BinaryTrees.BinaryTreeTraversal.Node;
/*
 * Use Postorder for this, because before deleting the parent node we should delete its children nodes first
 */
public class DeleteATree {
	
	Node root;
	public static class Node
	{
	    int key;
	    Node left, right;
	 
	    public Node(int key)
	    {
	        this.key = key;
	        left = right = null;
	    }
	}
	
    static void deleteTree(){
		

	}
	
	public static void main(String[] args) {
		
		DeleteATree tree = new DeleteATree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        
        tree.deleteTree();
        
	}
}
