package com.udermy.DinnerPhilosopher;

import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Chopsitick {
	
	private int id;
	
	private Lock lock;

	public Chopsitick(int id, Lock lock) {
		this.id = id;
		this.lock = new ReentrantLock();
	}
	
	// checks if a philosopher is able to pick up the chopstick
	public boolean pickUp(Philosopher philosopher , State state) throws InterruptedException
	{
		if(lock.tryLock(10,TimeUnit.MILLISECONDS))
		{
			System.out.println("Philosopher picked up "+ state.getDisplayString(state)+ " " + id);
			return true;
		}
		
		return false;
	}
	
	public boolean putUp(Philosopher philosopher , State state) throws InterruptedException
	{
			lock.unlock();
			System.out.println("Philosopher picked up "+ state.getDisplayString(state)+ " " + id);
			return true;
		}
		
		return false;
	}

}
