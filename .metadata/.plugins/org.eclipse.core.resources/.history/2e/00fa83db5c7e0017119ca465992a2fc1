package com.udemyConcurreny;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;


class worker4 implements Callable<String>
{

	private int id;
	//constructor
	public worker4(int id)
	{
		this.id = id;
	}
	
	@Override
	public String call() throws Exception {
		Thread.sleep(1000);
		return "Id"+ id ;
	}
	
}

public class CallableFutureLearn {

	public static void main(String[] args) {
		
		ExecutorService executerService = Executors.newFixedThreadPool(2);
		
		List<Future<String>> list  =  new ArrayList<>();
		
        for (int i = 0; i < 5; i++) {
        	Future<String> future = executerService.submit(new worker4(i));
            executerService.submit(new worker2());
            list.addAll(arg
        }
		
	}
}
