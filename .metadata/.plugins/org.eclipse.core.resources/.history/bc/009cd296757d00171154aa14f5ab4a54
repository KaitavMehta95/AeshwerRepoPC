package com.udemyConcurreny;


class  Processor{
	
	public void produce() throws InterruptedException
	{
		synchronized (this) {    // Intrinsic class levellock 
			System.out.println("Producer");
			wait();
			System.out.println("Producer Again ");
		}
	}
	
	public void consume() throws InterruptedException
	{
		Thread.sleep(1000);
		synchronized (this){
			System.out.println("Consumer");
			notify();
			System.out.println("Consumer Again ");
		}
		
	}
	
}

public class WaitAndNotify {
	public static void main(String[] args) {
		
		Processor processor = new Processor(); 
		Thread t1 = new Thread(new Runnable(){
			 
			@Override
			public void run() 
			{
					process();
			}
		}
		);
	}
}
