package com.udemyConcurreny;

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import javax.management.ReflectionException;

public class ReEntrantLocksLearn {
	
	private static int counter = 0;

	private static Lock lock= new ReentrantLock();
	
	public static void increment()
	{
		counter++;
	}

	public static void main(String[] args) {
		
		ReEntrantLocksLearn process = new ReEntrantLocksLearn(); 
		Thread t1 = new Thread(new Runnable(){
			 
			@Override
			public void run() 
			{
					increment();
			}
		}
		);
		
		Thread t2 = new Thread(new Runnable(){
			 
			@Override
			public void run() 
			{
				{
					increment();
			}
		}
		);
		
		t1.start();
		t2.start();
		
		try {
			t1.join();
			t2.join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
	} 
	}
}
