package BinaryTrees;

/*
 * The idea of threaded binary trees is to make In-order traversal faster and do it without stack and without recursion. 
 * A binary tree is made threaded by making all right child pointers that would normally be NULL point to the In-order successor of the node (if it exists)
 */
import BinaryTrees.InorderTraversalWithoutStackOrRecursion.Node;

public class ThreadedBinaryTree {

	Node root;
	static class Node
	{
		Node left;
		Node right;
		int key;
		Node(int key)
		{
			this.left= left;
			this.right= right;
			this.key =key;
		}
	}
	
public static void main(String[] args) {
		
		ThreadedBinaryTree tree = new ThreadedBinaryTree();
        tree.root = new Node(1);
        tree.root.left = new Node(2);
        tree.root.right = new Node(3);
        tree.root.left.left = new Node(4);
        tree.root.left.right = new Node(5);
        
        tree.	();
	}
}
