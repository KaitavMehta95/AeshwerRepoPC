package com.udemyCollectionConcurrency;

import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class working implements Runnable
{
	
}

public class CyclicBarrierLearn {

	public static void main(String[] args) {
		
		ExecutorService executerService = Executors.newSingleThreadExecutor();
		CyclicBarrier cyclicBarrier = new CyclicBarrier(5);
		

		// create five tasks
		for (int i = 0; i < 5; i++) {
			executerService.submit(new work(i, latch));
			try {
				latch.await();   // wait for ever single worker to finish  and until countDown has been called five times
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			System.out.println("All the prerequisites is done");
			executerService.shutdown();
		}
	}

}
