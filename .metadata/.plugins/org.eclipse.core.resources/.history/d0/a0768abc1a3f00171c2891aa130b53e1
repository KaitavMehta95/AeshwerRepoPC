package StandardQuestions;

import java.util.Arrays;

//Given a binary matrix, find out the maximum size square sub-matrix with all 1s.

public class MaxSizeSubArrayWithAll1 {
	
	static void printMaxSubSquare(int[][] arr, int len)
	{
		// copy first row and first column
		int s[][] = null;
		Arrays.fill(s, 0);
		for(int i= 0;i< len ;i++)
		{ s[0][i] = arr[0][i];
		  s[i][0] = arr[i][0];
		}
		//construct other entries
		for(int i= 0;i< len ;i++)
		{ for(int j= 0;j< len ;j++)
			{ 
				if(arr[i][j]==1)
				{
					s[i][j]= Math.min(Math.min(s[i][j-1], s[i-1][j]), s[i-1][j-1]) + 1;
				}
				else
				{
					s[i][j]=0;					
				}
				
			}
		}
		
		//Max entry in s[][]
		int max = s[0][0];
		for(int i= 0;i< len ;i++)
		{ for(int j= 0;j< len ;j++)
			{ 
			}
		
		]
	}
	public static void main(String[] args) {
		  int M[][] = {   {0, 1, 1, 0, 1}, 
				      	  {1, 1, 0, 1, 0}, 
		                  {0, 1, 1, 1, 0},
		                  {1, 1, 1, 1, 0},
		                  {1, 1, 1, 1, 1},
		                  {0, 0, 0, 0, 0} };
		                
		  printMaxSubSquare(M,5);
	}
}
