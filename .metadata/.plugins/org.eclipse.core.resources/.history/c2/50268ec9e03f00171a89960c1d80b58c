package StackAndQueues;

import LinkListProblems.LinkListInsertionsAndDeletions.Node;

public class StackImplementationUsingLinkList {

	private Node top;
	private int size=0;
	class Node{
		
		int data;
		Node next;
		Node(int data)
		{
			this.data = data;
  			this.next = null;
		}
	}
	
	boolean isEmpty()
	{
		if(top == null){return true ;}
		return false;
	}
	
	void push(int x)
	{
		Node new_Node = new Node(x);
		top = new_Node;
		size++;
		
	}
	
	int pop()
    {
		if(isEmpty())
		{
			System.out.println("Stack Underflow");
			return 0;	
		}
		else
		{
			int x = top.data;
			top = top.next;
			size--;
			
		}
    }
	
	void print()
	{
		Node tnode = top;
		while()
	}
	public static void main(String[] args) {
		
		StackImplementationUsingLinkList s = new StackImplementationUsingLinkList();
		
		s.push(10);
        s.push(20);
        s.push(30);
        System.out.println(s.pop() + " Popped from stack");

	}

}
