package com.udemyCollectionConcurrency;

import java.util.Random;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;


class work implements Runnable
{
	
	private int id;
	private CountDownLatch CountDownLatch;
	private Random random;
	
	public work(int id, CountDownLatch countDownLatch)
	{ 
		this.id = id;
		this.CountDownLatch = countDownLatch;
	}

	@Override
	public void run() {
		doWork();	
	}
	
	private void doWork()
	{
		System.out.println("Thread with id : "+ id + "Start Working");
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}

public class LatchLearn {

	public static void main(String[] args) {
		
		ExecutorService executerService = Executors.newSingleThreadExecutor();
		CountDownLatch latch = new CountDownLatch(0);
		
	}
}
