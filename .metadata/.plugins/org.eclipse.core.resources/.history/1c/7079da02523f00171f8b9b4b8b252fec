package DynamicProgrammingLearn;

//Given a binary matrix, find the maximum size rectangle binary-sub-matrix with all 1’s
public class MaxSizeSubRectangleWithAll1 {

	static int getMaxArea(Integer[] hist , int len)
	{
		return max_area;
	}
	
	
	static void printMaxSubRectangle(Integer arr[][],int row,int col)
	{
		Integer[] row_Array = new Integer[col];
		
		// copy first row as it in
		for(int i=0; i < col ;i++)
		{
			row_Array[i] = arr[0][i];
		}
		// calcuate its max are and update it
		int max_area = getMaxArea(row_Array, col);
		
		// Calculate area for first row and initialize it as
	    // result
	   // int result = maxArea(A[0]);
	}
	
	public static void main(String[] args) {
		  Integer M[][] ={	{0, 1, 1, 0, 1},
				  			{1, 1, 1, 1, 1},
				  			{1, 1, 1, 1, 1},
				  			{1, 1, 0, 0, 1} };
		                
		  printMaxSubRectangle(M,4,5);
	}
}
